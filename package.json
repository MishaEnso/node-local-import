{
  "name": "@snyk/registry",
  "description": "Registry",
  "main": "dist/lib/index.js",
  "engines": {
    "node": "^18",
    "npm": "^10"
  },
  "scripts": {
    "test": "npm run test:functional",
    "test:db-creation": "jest test/db-models/creation.test.js",
    "test:capture-used-ports": "node ./scripts/capture-used-ports.js",
    "test:functional": "npm run test:capture-used-ports && jest --ci --maxWorkers=${JOBS:-3} test/functional test/db-models",
    "test:system": "npm run test:capture-used-ports && jest --ci --maxWorkers=${JOBS:-3} test/system",
    "test:offline": "jest --ci --selectProjects offline",
    "test:platform": "jest --ci --selectProjects platform",
    "test:local": "jest --ci --selectProjects offline",
    "test:e2e": "LOG_LEVEL=info ./scripts/run_e2e.sh saas",
    "test:e2e-onprem": "./scripts/run_e2e.sh onprem",
    "test:frontend": "npm --prefix ./frontend run test",
    "test:contract": "jest --ci 'test/contract/agentclient-cdc.spec.svc.ts'",
    "test:contract-publish-cdc": "ts-node 'test/contract/publish_pacts.ts'",
    "test:contract-publish-bdc": "pushd test/contract; make fake_ci; popd;",
    "test:contract-can-deploy": "pushd test/contract; make fake_can_deploy; popd;",
    "lint": "run-p --max-parallel ${JOBS:-5} --aggregate-output lint:*",
    "lint:commits": "commitlint --from=HEAD~10",
    "lint:spelling": "cspell lint --no-progress 'views/**/*.html' 'frontend/src/components/**/*.vue'",
    "lint:ts-no-implicit-any": "if [ \"${CI_SKIP_SLOW_LINTS}\" != true ]; then ts-node scripts/tsc-no-implicit-any-check.ts; fi",
    "lint:ts-no-data-vue-non-empty": "ts-node scripts/no-data-vue-non-empty.ts",
    "lint:formatting-src": "prettier --check 'src/**/*.{js,ts}'",
    "lint:formatting-test": "prettier --check 'test/**/*.{js,ts}' '!public/{js,style}/build/**'",
    "lint:formatting-rest": "prettier --check '{scripts,public/js}/**/*.{js,ts}' '!public/{js,style}/build/**'",
    "lint:formatting-yaml": "prettier --check 'src/web/routes/api/{v3,internal,sarif}/**/*.yaml' '!src/web/routes/api/{v3,internal,sarif}/versions/**' '!src/web/routes/api/internal/rpc/versions/**'",
    "lint:model-typings": "ts-node --transpile-only typings/gen-models.ts && git diff --exit-code src/lib/types/models.ts",
    "lint:ts": "eslint --quiet --cache --cache-location .eslintcache-ts --color '{src,scripts,public/js/{!(build)}}/**/*.ts'",
    "lint:ts-tests": "eslint --quiet --cache --cache-location .eslintcache-tests --color 'test/**/*.ts'",
    "lint:check-ts-tests-scripts": "tsc -p test/tsconfig.json",
    "lint:new-unloved-files": "if [ \"${CI_SKIP_SLOW_LINTS}\" != true ]; then .github/new-unloved-files.sh; fi",
    "lint:new-legacy-tests": "test/tools/no-new-spec.sh",
    "lint:codeowners": "if [ \"${CI_SKIP_SLOW_LINTS}\" != true ]; then github-codeowners validate >/dev/null; fi",
    "lint:openapi": "if [ -z \"$CI\" ]; then npm run vervet:lintonly; fi",
    "lint:api-uncommitted-changes": "./scripts/api/check-uncommitted-changes.sh",
    "ampli:init": "ampli init",
    "ampli:pull": "ampli pull --omit-api-keys && npm --prefix ./frontend run ampli:pull",
    "ampli:pull-current-branch": "branch=`git symbolic-ref -q HEAD --short` || true && ampli pull ${branch:+-b $branch} --omit-api-keys && npm --prefix ./frontend run ampli:pull-current-branch",
    "ampli:pull-main": "ampli pull -b main --omit-api-keys && npm --prefix ./frontend run ampli:pull-main",
    "ampli:verify": "./scripts/analytics/ampli-verify.sh",
    "list-experiment-files": "ts-node --transpile-only ./scripts/analytics/experiment-cli/index.ts",
    "format": "run-p --max-parallel ${JOBS:-6} format:*",
    "format:src": "prettier --write 'src/**/*.{js,ts}' '!src/lib/analytics/itly/*.{js,ts}'",
    "format:test": "prettier --write 'test/**/*.{js,ts}'",
    "format:rest": "prettier --write '{scripts,public/js}/**/*.{js,ts}' '!public/js/build/**'",
    "format:changes": "./scripts/format/prettier-changes.sh",
    "format:yaml": "prettier --write 'src/web/routes/api/{v3,internal,sarif}/**/*.yaml' '!src/web/routes/api/{v3,internal,sarif}/versions/**' '!src/web/routes/api/internal/rpc/versions/**'",
    "watch-resources-js": "nodemon -V --watch public/js --watch views -i public/js/build/ -e js,html -x 'npm run build:legacy-js'",
    "watch-resources-css": "nodemon -V --watch node_modules/@snyk/snyk-ui/build/assets -e css -x 'npm run build:legacy-css'",
    "watch-webpack-bundle": "echo 'This command has been removed, please use vue-dev instead.'",
    "watch-resources": "npx concurrently --kill-others 'npm run watch-frontend' 'npm run watch-legacy'",
    "watch-frontend": "npx concurrently --kill-others 'npm run vue-dev' 'npm run dev:watch:frontend'",
    "watch-legacy": "npx concurrently --kill-others 'npm run watch-resources-js' 'npm run watch-resources-css'",
    "watch-ts": "tsc --project tsconfig.json -w",
    "vue-dev": "frontend/node_modules/.bin/webpack -c frontend/webpack.root.config.js --mode development --watch",
    "build:legacy-css": "cp -r node_modules/@snyk/snyk-ui/build/assets/. public/style/build/",
    "compile-handlebars": "handlebars views/partials/alerts/alert.html views/partials/loading.html views/partials/limit-list-link.html node_modules/@snyk/snyk-ui/build/components/@chart-tooltip.html -e html -f public/js/build/templates.js",
    "build:legacy-js": "{ xargs cat < .frontend ; } > ./public/js/build/app.js",
    "minify-legacy-js": "uglifyjs public/js/build/app.js --source-map -c -m --output public/js/build/app.min.js",
    "build:webpack": "frontend/node_modules/.bin/webpack -c frontend/webpack.root.config.js --mode ${NODE_ENV:=production}",
    "build:ts": "tsc --project tsconfig.json",
    "build:vervet": "npm run vervet:nolint && npm run generate-api-clients",
    "build-with-tests": "npm run lint:check-ts-tests-scripts",
    "build": "NODE_ENV=${NODE_ENV:=production} run-p --aggregate-output build:* && npm run prepare-assets-for-cdn",
    "generate-api-clients": "run-p --max-parallel ${JOBS:-6} generate-api-clients:*",
    "generate-api-clients:internal": "./scripts/api/generate-internal-api.sh",
    "prepare-assets-for-cdn": "npm run minify-legacy-js && npm run md5ify && cp -a public/style/build/fonts static-assets/style/build",
    "md5ify": "./scripts/md5ify.sh public/style/build/styles/*.css public/js/build/*.js public/js/build/*.js.map public/js/build/frontend/*.js public/js/build/frontend/*.js.map public/js/build/frontend/*.css > ./deployed-assets.json",
    "prebuild": "rm -rf dist/ && if [ -d ./static-assets ]; then find static-assets -type f -delete; fi && mkdir -p public/style/build && mkdir -p public/js/build && npm run compile-handlebars",
    "postbuild": "rm -f public/style/build/*.md5.css public/js/build/*.md5.js public/js/*.md5.js public/js/vendor/*.md5.js",
    "start": "bin/start",
    "prepare": "if [ \"${CI_SKIP_VERVET}\" != true ]; then npm run vervet:nolint; fi",
    "migrate": "ts-node --transpile-only scripts/db/migrate.ts",
    "dev": "nodemon -w src --ignore versions/ -e yaml,json -x 'npm run dev:run'",
    "dev:run": "npm run migrate && npm run vervet:nolint && tsc-watch --project tsconfig.json --onSuccess 'node .' | bunyan",
    "debug": "nodemon -w src --ignore versions/ -e yaml,json -x 'npm run debug:run'",
    "debug:run": "npm run migrate && npm run vervet:nolint && DEBUG=snyk:*,-snyk:vuln-detail tsc-watch --project tsconfig.json --onSuccess 'node --inspect .' | bunyan",
    "postinstall": "if [ \"${CI_SKIP_FRONTEND}\" != true ]; then npm --legacy-peer-deps --prefix ./frontend ci --also=dev; fi; (patch-package || true)",
    "ci-p": "set -m; CI_SKIP_FRONTEND=true npm ci & npm --prefix=frontend/ ci --also=dev --legacy-peer-deps && fg",
    "clean": "test/tools/clean.sh",
    "build:frontend": "npm --legacy-peer-deps --prefix ./frontend run build",
    "dev:frontend": "npm --prefix ./frontend run dev",
    "release:frontend": "npm --prefix ./frontend run release",
    "bundlesize:frontend": "npm --prefix ./frontend run bundlesize",
    "output-permissions": "ts-node --transpile-only ./scripts/permissions-script/index.ts --output-permissions",
    "test-permissions": "ts-node --transpile-only ./scripts/permissions-script/index.ts --test",
    "dev:watch:frontend": "npm --prefix ./frontend run dev:watch",
    "format:frontend": "npm --prefix ./frontend run format",
    "storybook": "npm --prefix ./frontend run storybook",
    "storybook:build": "npm --prefix ./frontend run storybook:build",
    "analyze-webpack-components": "npm --prefix ./frontend run analyze-components",
    "new-component": "npm --prefix ./frontend run new-component",
    "new-page": "npm --prefix ./frontend run new-page",
    "migrate-component": "npm --prefix ./frontend run migrate-component",
    "migrate-page": "npm --prefix ./frontend run migrate-page",
    "vervet": "./scripts/api/vervet.sh build && npm run vervet:update-catalog",
    "vervet:check-catalog": "./scripts/api/vervet.sh backstage check-catalog",
    "vervet:update-catalog": "./scripts/api/vervet.sh backstage update-catalog",
    "vervet:nolint": "./scripts/api/vervet.sh build --lint=false && npm run vervet:update-catalog",
    "vervet:lintonly": "./scripts/api/vervet.sh lint",
    "vervet:compliance": "./scripts/api/vervet.sh lint --config .vervet.compliance.yaml",
    "generate": "npm run generate:avro-schemas",
    "generate:avro-schemas": "find schemas/avro | grep .avsc | xargs -I {} avro-ts {} -O src/ --defaults-as-optional && prettier -w src/schemas",
    "issues-consumer:dev": "NODE_ENV=${NODE_ENV:=local} nodemon -w src --ignore versions/ -e yaml,jso scripts/issues-queue/consumer.ts",
    "issues-consumer": "NODE_ENV=${NODE_ENV:=production} npx ts-node --transpile-only scripts/issues-queue/consumer.ts",
    "target-events-consumer:dev": "NODE_ENV=${NODE_ENV:=local} nodemon -w src --ignore versions/ -e yaml,jso scripts/target-events/consumer.ts",
    "target-events-consumer": "NODE_ENV=${NODE_ENV:=production} npx ts-node --transpile-only scripts/target-events/consumer.ts"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/snyk/registry.git"
  },
  "author": "snyk.io",
  "private": true,
  "bugs": {
    "url": "https://github.com/snyk/registry/issues"
  },
  "homepage": "https://github.com/snyk/registry",
  "dependencies": {
    "@amplitude/analytics-node": "^1.1.6",
    "@amplitude/experiment-node-server": "^1.8.0",
    "@amplitude/node": "^1.10.2",
    "@aws-sdk/client-s3": "^3.495.0",
    "@aws-sdk/lib-storage": "^3.490.0",
    "@babel/core": "~7.23.7",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/preset-env": "~7.23.8",
    "@google-cloud/bigquery": "^7.3.0",
    "@google-cloud/storage": "~6.10.1",
    "@handlebars/allow-prototype-access": "^1.0.5",
    "@hapi/joi": "^15.0.3",
    "@itly/plugin-iteratively-node": "^2.3.4",
    "@itly/plugin-schema-validator": "^2.3.4",
    "@itly/sdk": "^2.3.4",
    "@kafkajs/confluent-schema-registry": "^3.2.1",
    "@okta/okta-sdk-nodejs": "^7.0.1",
    "@opentelemetry/api": "^1.4.0",
    "@opentelemetry/exporter-jaeger": "^1.0.1",
    "@opentelemetry/instrumentation-express": "0.34.1",
    "@opentelemetry/instrumentation-http": "^0.45.1",
    "@opentelemetry/instrumentation-ioredis": "0.36.1",
    "@opentelemetry/instrumentation-pg": "^0.37.2",
    "@opentelemetry/propagator-b3": "^1.0.1",
    "@opentelemetry/resources": "^1.6.0",
    "@opentelemetry/sdk-trace-base": "^1.0.1",
    "@opentelemetry/sdk-trace-node": "^1.7.0",
    "@opentelemetry/semantic-conventions": "^1.0.1",
    "@patchui/productcl": "^2.14.2",
    "@segment/analytics-node": "^2.0.0",
    "@sentry/node": "^7.92.0",
    "@snyk/avro-ts-cli": "^10.0.0",
    "@snyk/cloud-config-parser": "1.14.5",
    "@snyk/cocoapods-lockfile-parser": "^3.8.0",
    "@snyk/code-issue-identity": "2.1.2",
    "@snyk/composer-lockfile-parser": "1.4.1",
    "@snyk/correlation": "^5.5.0",
    "@snyk/dep-graph": "^2.8.0",
    "@snyk/email-templates": "^2.25.0",
    "@snyk/error-catalog-nodejs": "^5.15.1",
    "@snyk/event-bus-node": "^3.0.0",
    "@snyk/event-bus-node-rdkafka": "^1.1.2",
    "@snyk/express-x-hub": "^1.2.0",
    "@snyk/gemfile": "^1.2.0",
    "@snyk/import-service-client": "^5.52.0",
    "@snyk/kms-sdk": "^1.10.3",
    "@snyk/license-normalize": "1.89.2",
    "@snyk/log": "^5.1.2",
    "@snyk/maven-semver": "4.3.0",
    "@snyk/node-dump-stacks": "^1.8.0",
    "@snyk/orchestration-client": "^4.2.0",
    "@snyk/pagination": "^2.1.1",
    "@snyk/priority-score-calculator": "9.0.1",
    "@snyk/rest-node-libs": "^5.2.1",
    "@snyk/rpc": "^4.2.0",
    "@snyk/ruby-fix-bundle": "2.1.5",
    "@snyk/ruby-semver": "3.0.2",
    "@snyk/sequelize-encrypted": "^0.5.0",
    "@snyk/snyk-ui": "^1.507.1",
    "@snyk/target-service-client": "^4.30.0",
    "@snyk/vervet": "^5.10.0",
    "@snyk/workspace-service-client": "^6.25.0",
    "@types/analytics-node": "^3.1.4",
    "@types/debug": "^4.1.6",
    "@types/express": "^4.17.21",
    "@types/express-serve-static-core": "4.17.35",
    "@types/hapi__joi": "^15.0.1",
    "@types/hosted-git-info": "^3.0.0",
    "@types/http-errors": "^1.8.0",
    "@types/ioredis": "^4.28.5",
    "@types/jquery": "^3.5.29",
    "@types/lodash": "4.14.123",
    "@types/luxon": "^3.4.2",
    "@types/micromatch": "^4.0.4",
    "@types/needle": "^3.2.0",
    "@types/node": "^18",
    "@types/nodemailer": "^6.4.11",
    "@types/passport": "1.0.16",
    "@types/pg": "^8.10.5",
    "@types/qs": "^6.9.12",
    "@types/redlock": "^4.0.1",
    "@types/request-promise-native": "^1.0.16",
    "@types/response-time": "^2.3.3",
    "@types/sarif": "^2.1.3",
    "@types/semver": "^7.5.3",
    "@types/shimmer": "^1.0.2",
    "@types/swagger-jsdoc": "^6.0.1",
    "@types/swagger-ui-express": "^4.1.2",
    "@types/xmlpoke": "^0.1.4",
    "@types/yargs": "^17.0.28",
    "@xmldom/xmldom": "^0.8.9",
    "ajv": "^8.12.0",
    "ajv-formats": "^2.1.1",
    "archiver": "^7.0.0",
    "archiver-zip-encrypted": "^2.0.0",
    "auth0": "^4.0.2",
    "base64url": "^3.0.1",
    "bcrypt": "^5.0.1",
    "body-parser": "^1.19.0",
    "caniuse-lite": "^1.0.30001578",
    "change-case": "^4.1.2",
    "ci": "^2.1.1",
    "clipboard": "^2.0.11",
    "common-tags": "^1.8.2",
    "compression": "^1.7.4",
    "connect-redis": "^6.1.3",
    "cookie-parser": "^1.4.4",
    "cookie-signature": "^1.2.0",
    "core-js": "~3.35.0",
    "csurf": "^1.10.0",
    "csv-parse": "^5.5.3",
    "csv-writer": "^1.6.0",
    "debug": "^4.3.1",
    "email-validator": "^2.0.4",
    "escape-quotes": "^1.0.2",
    "eslint-plugin-airtight": "^2",
    "event-loop-spinner": "^2.0.0",
    "eventemitter2": "^6.4.9",
    "express": "^4.18.1",
    "express-async-errors": "^3.1.1",
    "express-basic-auth": "^1.2.0",
    "express-csp-header": "^5.0.0",
    "express-hbs": "2.4.0",
    "express-jwt": "^8.4.1",
    "express-prom-bundle": "^6.6.0",
    "express-session": "^1.17.2",
    "extract-stack": "^2.0.0",
    "feature-gateway": "0.0.4",
    "filenamify": "^4.3.0",
    "free-email-domains": "^1.2.9",
    "git-commit-info": "^2.0.2",
    "graphlib": "^2.1.8",
    "gravatar": "^1.8.1",
    "greenkeeper-monorepo-definitions": "^1.21.1",
    "handlebars": "~4.7.7",
    "he": "^1.2.0",
    "highlight.js": "^11.9.0",
    "hosted-git-info": "^4.0.2",
    "http-errors": "^1.8.0",
    "http-link-header": "^1.1.0",
    "http-status-codes": "^2.2.0",
    "iframe-resizer": "^4.3.6",
    "ioredis": "^4.28.5",
    "ioredis-mock": "^6.8.0",
    "ip-address": "^7.1.0",
    "joi": "^17.11.0",
    "jose": "^4.15.5",
    "jquery": "^3.7.1",
    "js-cookie": "3.0.5",
    "jsonwebtoken": "^9.0.2",
    "jspolyfill-array.prototype.findIndex": "^0.1.0",
    "jwks-client": "^1.4.3",
    "kafkajs": "^2.2.4",
    "kafkajs-metrics": "^1.0.0",
    "kafkajs-snappy": "^1.1.0",
    "lodash": "^4.17.21",
    "luxon": "^3.4.4",
    "marked": "^9.1.6",
    "method-override": "^3.0.0",
    "micromatch": "^4.0.4",
    "moment": "^2.29.4",
    "mustache": "^4.2.0",
    "needle": "^3.2.0",
    "nocache": "^4.0.0",
    "node-cache": "^5.1.2",
    "node-fetch": "^2.7.0",
    "node-jose": "^2.2.0",
    "npm-run-all": "^4.1.5",
    "openid-client": "^5.6.1",
    "p-each-series": "^2.1.0",
    "p-limit": "^3.1.0",
    "p-map": "^4.0.0",
    "p-queue": "^6.2.1",
    "p-reflect": "^2.1.0",
    "p-throttle": "^4.1.1",
    "parse-link-header": "^2.0.0",
    "passport": "^0.7.0",
    "passport-auth0": "^1.4.4",
    "passport-github2": "^0.1.12",
    "patch-package": "^8.0.0",
    "path-to-regexp": "^6.2.0",
    "pg": "^8.11.1",
    "pg-hstore": "^2.3.4",
    "picomatch": "^2.3.0",
    "pino-pretty": "^10.3.1",
    "pluralize": "^8.0.0",
    "popsicle-cookie-jar": "^1.0.0",
    "postcss": "^8.4.21",
    "postcss-html": "^1.3.0",
    "prom-client": "^15.0.0",
    "qs": "^6.10.4",
    "query-string": "^7.1.1",
    "redlock": "4.1.0",
    "referrer-policy": "^1.2.0",
    "regenerator-runtime": "^0.13.10",
    "request-promise-native": "^1.0.9",
    "response-time": "^2.3.2",
    "safe-compare": "^1.1.4",
    "sanitize-html": "^2.12.1",
    "sass": "^1.70.0",
    "scmp": "^2.1.0",
    "semver": "^7.5.4",
    "sequelize": "^6.33.0",
    "shimmer": "^1.2.1",
    "short-uuid": "^4.2.2",
    "sleep-promise": "^9.1.0",
    "slugify": "^1.6.4",
    "snowflake-sdk": "^1.9.3",
    "snyk-config": "^5.0.0",
    "snyk-docker-plugin": "^6.10.2",
    "snyk-go-parser": "^1.13.0",
    "snyk-module": "^3.2.0",
    "snyk-nodejs-lockfile-parser": "1.52.10",
    "snyk-policy": "^2.0.6",
    "spdx-correct": "^3.1.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^4.6.3",
    "tldts": "^6.1.2",
    "ts-node": "^10.9.1",
    "typescript": "~5.3.3",
    "uglify-js": "^3.16.3",
    "umzug": "^2.3.0",
    "url-join": "4.0.1",
    "uuid": "^8.3.2",
    "validate-npm-package-name": "^5.0.0",
    "vue": "2.6.14",
    "vue-material-design-icons": "4.13.0",
    "vue-router": "^3.6.4",
    "vue-template-compiler": "2.7.16",
    "vuex": "3.6.2",
    "whatwg-fetch": "^3.6.19",
    "xpath": "^0.0.33",
    "yaml": "^2.4.1",
    "yargs": "^17.7.1"
  },
  "devDependencies": {
    "@amplitude/ampli": "1.34.0",
    "@commitlint/cli": "^17.3.0",
    "@faker-js/faker": "^7.3.0",
    "@itly/plugin-amplitude": "^2.5.0",
    "@itly/plugin-testing": "^2.3.4",
    "@jest/reporters": "^29",
    "@jest/types": "^29",
    "@pact-foundation/pact": "~9.17.3",
    "@snyk/github-codeowners": "^1.0.0",
    "@snyk/sweater-comb": "^2.0.0",
    "@stoplight/spectral-cli": "^6.4.1",
    "@types/graphlib": "^2.1.7",
    "@types/jest": "^29",
    "@types/jsonwebtoken": "8.5.8",
    "@types/mustache": "^4.2.2",
    "@types/sinon": "^10.0.14",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^8.3.0",
    "@typescript-eslint/eslint-plugin": "^6",
    "@typescript-eslint/parser": "^6",
    "@vue/test-utils": "^1.0.4",
    "adm-zip": "^0.5.6",
    "axe-core": "^4.0.2",
    "babel-jest": "^29",
    "cheerio": "1.0.0-rc.3",
    "cli-progress": "^3.9.1",
    "comment-json": "^4.0.6",
    "cspell": "^7.3.7",
    "del": "^6.0.0",
    "drafter.js": "^3.0.2",
    "eslint": "^8.15.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-deprecate": "^0.8",
    "eslint-plugin-jest": "^27.4",
    "eslint-plugin-vue": "^9",
    "fadge": "^0.0.1",
    "glob-all": "^3.1.0",
    "jest": "^29",
    "jest-diff": "^29",
    "jest-junit": "^14",
    "jest-mock": "^29",
    "jest-mock-server": "^0.1.0",
    "jest-runner": "^29",
    "jest-runner-groups": "^2.1.0",
    "jest-serializer-vue": "^2.0.2",
    "jsverify": "^0.8.4",
    "junit-merge": "^2.0.0",
    "mockdate": "^3.0.2",
    "nanoid": "^3.1.25",
    "nock": "^13.3.0",
    "nodemon": "^3.0.1",
    "openapi-typescript": "^5.4.1",
    "prettier": "~3.0.3",
    "sinon": "^17.0.1",
    "supertest": "^6.0.1",
    "ts-jest": "^29",
    "tsc-watch": "^6.0.4",
    "weak-napi": "^2.0.2",
    "yargs": "^17.7.1"
  },
  "overrides": {
    "fsevents": "2.3.2"
  },
  "release": {
    "branches": [
      "main"
    ],
    "verifyConditions": [
      "@semantic-release/github"
    ],
    "publish": [
      "@semantic-release/github"
    ],
    "success": [
      "@semantic-release/github"
    ],
    "fail": [
      "@semantic-release/github"
    ]
  }
}
